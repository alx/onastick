#+title: IA on a Stick

[[./static/camera_logo.png]]

#+begin_quote
"... a powerful system integrating Raspberry Pi with Alpine Linux, Tailscale networking, and PaperMod theming for seamless remote access and streamlined hardware management. The project offers easy-to-follow scripts for setting up services, maintaining remote systems, and deploying web interfaces, with robust support for GPU-based operations on the A1111 Forge. Ideal for developers looking to optimize IoT and edge computing solutions while ensuring scalable network security and performance." --- GPT 4o
#+end_quote

** Hardware stack

[[./static/hardware_setup_202409.jpeg]]

*** Current stack - 202409

- RaspberryPi 2 Model B+
- SDcard 16Go
- USB webcam, Logitech c270
- 4G wifi router, GL-iNet GL-XE300
- PowerBank 2000mAh 5V Power Bank, Varta 57962
- 1x USB-B - USB-micro cable: battery - raspi
- 1x USB-B - USB-C cable: battery - router
- 1x eth cable : router - raspi
- not visible: hosted gpu running sd

*** Future stack

- RaspberryPi 3+: remove router and 2x cables
- instax printer: real life result
- big red button: tangible UI, no screen

** Network

[[./static/network_diagram_202409.png]]

** Dev Setup

#+begin_src bash
export ONASTICK_PATH=/home/alx/www/onastick/
export A1111_FORGE_PATH=/home/alx/code/a1111_forge/
export RASPI_IP=192.168.8.178
#+end_src

*** Clone repository

#+BEGIN_SRC bash
mkdir -p $ONASTICK_PATH
git clone https://github.com/alx/onastick.git
#+END_SRC

*** Install PaperMod Theme

#+BEGIN_SRC bash
cd $ONASTICK_PATH
git submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod

# needed when you reclone your repo (submodules may not get cloned automatically)
git submodule update --init --recursive
#+END_SRC

[[https://github.com/adityatelange/hugo-PaperMod][PaperMod Github]]

*** Alpine

**** APK packages

#+begin_src bash
ssh root@$RASPI_IP <<'EOL'
        apk add mjpeg-streamer \
        nginx \
        tailscale \
        vim
EOL

# don't forget to update Alpine local backup
ssh root@$RASPI_IP 'lbu commit'
#+end_src

**** Tailscale auth key

1. Create a *reusable* auth key on Tailscale admin website: https://login.tailscale.com/admin/settings/keys
2. Copy auth key in ~./server/local.d/02_tailscale_keys.start~
3. Update local.d script on raspberry pi:

#+begin_src bash
cd $ONASTICK_PATH
cp ./server/local.d/02_tailscale_nokeys.start \
    ./server/local.d/02_tailscale_keys.start

rsync -r ./server/local/02_tailscale_keys.start \
    root@${RASPI_IP}:/etc/local.d/

# You must add local to default services
ssh root@$RASPI_IP 'rc-update add local default'
ssh root@$RASPI_IP 'lbu commit'
#+end_src

**** Install other startup scripts

#+begin_src bash
cd $ONASTICK_PATH
rsync -r ./server/local.d/* root@${RASPI_IP}:/etc/local.d/

# don't forget to update Alpine local backup
ssh root@$RASPI_IP 'lbu commit'
#+end_src

**** Install nginx configuration

#+begin_src bash
cd $ONASTICK_PATH
rsync ./server/nginx/onastick.conf root@${RASPI_IP}:/etc/nginx/http.d/default.conf

# don't forget to update Alpine local backup
ssh root@$RASPI_IP 'lbu commit'
#+end_src

** Maintenance

*** Update nginx on raspberry pi

#+begin_src bash
cd $ONASTICK_PATH
rsync ./server/nginx/onastick.conf root@${RASPI_IP}:/etc/nginx/http.d/default.conf

# don't forget to update Alpine local backup
ssh root@$RASPI_IP 'lbu commit'
#+end_src

*** Update running script runned at raspberry pi boot

#+begin_src bash
cd $ONASTICK_PATH
rsync -r ./server/local.d/* root@${RASPI_IP}:/etc/local.d/

# don't forget to update Alpine local backup
ssh root@$RASPI_IP 'lbu commit'
#+end_src

*** Update raspberry pi website

#+begin_src bash
cd $ONASTICK_PATH
hugo
rsync -r ./public/* root@${RASPI_IP}:/media/mmcblk0p2/onastick/

# don't forget to update Alpine local backup
ssh root@$RASPI_IP 'lbu commit'
#+end_src

** Start website

*** On GPU laptop

**** Start A1111 Forge:

#+begin_src bash
cd $A1111_FORGE_PATH
. .venv/bin/activate
export COMMANDLINE_ARGS="--api"
./webui.sh
#+end_src

**** Listen A1111 port 7860 on tailnet port 80:

#+begin_src bash
tailscale serve --http 80 7860
#+end_src
