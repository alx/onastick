#+title: IA on a Stick

[[./static/camera_logo_202410.jpg]]

#+begin_quote
"... a powerful system integrating Raspberry Pi with Alpine Linux, Tailscale networking, and PaperMod theming for seamless remote access and streamlined hardware management. The project offers easy-to-follow scripts for setting up services, maintaining remote systems, and deploying web interfaces, with robust support for GPU-based operations on the A1111 Forge. Ideal for developers looking to optimize IoT and edge computing solutions while ensuring scalable network security and performance." --- GPT 4o
#+end_quote

** Deploy setup

#+NAME: init_var
#+begin_src bash
export DEV_PATH=/home/alx/www/onastick/
export A1111_FORGE_PATH=/home/alx/code/a1111_forge/

export RASPI_IP=192.168.8.178
export RASPI_HOSTNAME='alpine'
#+end_src

#+RESULTS: init_var

*** GPU laptop: A1111 webui.sh on tailscale network

**** Start A1111 Forge:

#+begin_src bash
cd $A1111_FORGE_PATH
. .venv/bin/activate
export COMMANDLINE_ARGS="--api"
./webui.sh
#+end_src

**** Listen A1111 port 7860 on tailnet port 80:

#+begin_src bash
tailscale serve --http 80 7860
#+end_src

*** Router: connect to WAN

- current method is to configure a wifi hotspot on a 4g phone
- open router admin and connect to wifi hotspot
- network will be shared to raspberry

*** RASPI: find and connect to tailscale network

- find ~$RASPI~ on tailscale network

  #+begin_src bash
export RASPI_HOSTNAME='alpine'

# Run tailscale status and filter for RASPI_HOSTNAME that is online
online_alpine=$(tailscale status | grep $RASPI_HOSTNAME | grep -E '\s+-$')

# Check if any online Alpine computers were found
if [ -z "$online_alpine" ]; then
  echo "No online Alpine computers found."
fi

# Extract the IP address of the first online Alpine computer
RASPI_IP=$(echo "$online_alpine" | awk '{print $1}')

# Display the IP address of the Alpine computer to connect to
echo "RASPI_IP: $ip_address"
  #+end_src

- open browser: http://$RASPI_IP


** News

*** 202409 - UI

**** Firefox screenshot

[[./static/docs/202410_UI_firefox.jpeg]]

**** UI mockup

[[./static/docs/202409_UI_vertical.jpeg]]

*** 202409 - fieldtest

[[./static/docs/202409_beach.jpeg]]

[[./static/docs/202409_zoom.jpeg]]

[[./static/docs/202409_UI.jpeg]]

** Hardware stack

[[./static/docs/202409_hardware_setup.jpeg]]

*** Current stack - 202409

- RaspberryPi 2 Model B+
- SDcard 16Go
- USB webcam, Logitech c270
- 4G wifi router, GL-iNet GL-XE300
- PowerBank 2000mAh 5V Power Bank, Varta 57962
- 1x USB-B - USB-micro cable: battery - raspi
- 1x eth cable : router - raspi
- not visible: hosted gpu running sd

#+html: <details><summary>
*** Future stack
#+html: </summary>

- RaspberryPi 3+: remove router and 2x cables
- instax printer: real life result
- big red button: tangible UI, no screen

#+html: </details>
#+html: <details><summary>
*** Forgotten stack
#+html: </summary>

- 202409: router is on battery - 1x USB-B - USB-C cable: battery - router

#+html: </details>

** Network

[[./static/docs/202409_network_diagram.png]]

** Dev Setup

#+html: <details><summary>
*** Clone repository
#+html: </summary>

#+BEGIN_SRC bash
mkdir -p $DEV_PATH
git clone https://github.com/alx/onastick.git
#+END_SRC

#+html: </details>
#+html: <details><summary>
*** Install PaperMod Theme
#+html: </summary>

#+BEGIN_SRC bash
cd $DEV_PATH
git submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod

# needed when you reclone your repo (submodules may not get cloned automatically)
git submodule update --init --recursive
#+END_SRC

[[https://github.com/adityatelange/hugo-PaperMod][PaperMod Github]]
#+html: </details>

*** Alpine

#+html: <details><summary>
**** APK packages
#+html: </summary>

#+begin_src bash
ssh root@$RASPI_IP <<'EOL'
        apk add mjpeg-streamer \
        nginx \
        nginx-mod-rtmp \
        ffmpeg \
        tailscale \
        vim
EOL

# don't forget to update Alpine local backup
ssh root@$RASPI_IP 'lbu commit'
#+end_src

#+html: </details>
#+html: <details><summary>
**** Tailscale auth key
#+html: </summary>

1. Create a *reusable* auth key on Tailscale admin website: https://login.tailscale.com/admin/settings/keys
2. Copy auth key in ~./server/local.d/01_tailscale_keys.start~

#+begin_src bash
cd $ONASTICK_PATH
cp ./server/local.d/01_tailscale_nokeys.start \
    ./server/local.d/01_tailscale_keys.start
#+end_src

3. Update local.d script on raspberry pi:

#+begin_src bash
rsync -avh ./server/local.d/01_tailscale_keys.start \
    root@${RASPI_IP}:/etc/local.d/01_tailscale_keys.start

# You must add local to default services
ssh root@$RASPI_IP 'rc-update add local default'
ssh root@$RASPI_IP 'lbu commit'
#+end_src

#+html: </details>
#+html: <details><summary>
**** Install webcam_stream service
#+html: </summary>

#+begin_src bash :noweb yes :results silent
<<init_var>>
rsync -avh ./server/init.d/webcam_stream \
    root@${RASPI_IP}:/etc/init.d/webcam_stream \
    --delete

# add webcam_stream service at default level in openrc
ssh root@$RASPI_IP 'rc-update add webcam_stream default'

rsync -avh ./server/bin/webcam_capture.sh \
    root@${RASPI_IP}:/usr/local/bin/webcam_capture.sh \
    --delete

# don't forget to update Alpine local backup
ssh root@$RASPI_IP 'lbu commit'
#+end_src

#+html: </details>
#+html: <details><summary>
**** Install other startup scripts
#+html: </summary>

#+begin_src bash
cd $ONASTICK_PATH
rsync -avh ./server/local.d/ \
    root@${RASPI_IP}:/etc/local.d/ \
    --delete

# don't forget to update Alpine local backup
ssh root@$RASPI_IP 'lbu commit'
#+end_src

#+html: </details>
#+html: <details><summary>
**** Install nginx configuration
#+html: </summary>

#+begin_src bash
<<init_var>>
cd $ONASTICK_PATH

# nginx.conf
rsync -avh ./server/nginx/nginx.conf \
    root@${RASPI_IP}:/etc/nginx/nginx.conf

# http.d/default.conf
rsync -avh ./server/nginx/onastick.conf \
    root@${RASPI_IP}:/etc/nginx/http.d/default.conf

# restart nginx service
ssh root@$RASPI_IP rc-service nginx restart

# don't forget to update Alpine local backup
ssh root@$RASPI_IP 'lbu commit'
#+end_src

#+html: </details>
#+html: <details><summary>
**** Stream
#+html: </summary>

#+begin_src bash
ffmpeg \
    -f v4l2 \
    -framerate 30 \
    -video_size 176x144 \
    -input_format yuyv422 \
    -i /dev/video0 \
    -f hls \
    -c:v libx264 \
    -b:v 5000k \
    -hls_time 6 \
    -hls_list_size 10 \
    -hls_delete_threshold 1 \
    -hls_flags delete_segments \
    /mnt/hls/stream.m3u8
#+end_src

#+html: </details>

** Maintenance

*** Update nginx on raspberry pi

#+begin_src bash
cd $ONASTICK_PATH
rsync-avh  ./server/nginx/onastick.conf \
    root@${RASPI_IP}:/etc/nginx/http.d/default.conf

# don't forget to update Alpine local backup
ssh root@$RASPI_IP 'lbu commit'
#+end_src

*** Update running script runned at raspberry pi boot

#+begin_src bash
cd $ONASTICK_PATH
rsync -avh ./server/local.d/ \
    root@${RASPI_IP}:/etc/local.d/ \
    --delete

# don't forget to update Alpine local backup
ssh root@$RASPI_IP 'lbu commit'
#+end_src

*** Update hugo website on raspberry pi

#+begin_src bash :noweb yes :results silent
<<init_var>>
cd $DEV_PATH
hugo
rsync -avh ${DEV_PATH}/public/ \
    root@${RASPI_IP}:/media/mmcblk0p2/onastick/ \
    --delete

# don't forget to update Alpine local backup
ssh root@$RASPI_IP 'lbu commit'
#+end_src

** Specifications

Compute dimensions of various elements

#+html: <details><summary>
*** UI Display
#+html: </summary>
**** top image

USB webcam provide 16:9 format at 360p, image is 640x360px

On a vertical screen, Youtube Short reference format is vertical 16:9 at 1920x1080 resolution

To reduce stream bandwith, /mjpg-streamer/ should send 640x360px.
It should be reduced even more to avoid network over-usage.

On a 1080px width viewport, top image size is 1080x750px

**** middle section

110px toolbar

**** bottom image

The bottom image height is (1920-(750 + 110))px = 1080px

The bottom image dimension is 1080x1080px
**** button

Button must be placed on middle section center

#+html: </details>
#+html: <details><summary>
*** webcam formats
#+html: </summary>

#+begin_src bash
ffmpeg -f video4linux2 -list_formats all -i /dev/video0
ffmpeg version 6.1.1 Copyright (c) 2000-2023 the FFmpeg developers
...
[video4linux2,v4l2 @ 0x728a7cc0] Raw       :     yuyv422 :           YUYV 4:2:2 : 640x480 160x120 176x144 320x176 320x240 352x288 432x240 544x288 640x360 752x416 800x448 800x600 864x480 960x544 960x720 1024x576 1184x656 1280x720 1280x960
[video4linux2,v4l2 @ 0x728a7cc0] Compressed:       mjpeg :          Motion-JPEG : 640x480 160x120 176x144 320x176 320x240 352x288 432x240 544x288 640x360 752x416 800x448 800x600 864x480 960x544 960x720 1024x576 1184x656 1280x720 1280x960
#+end_src
#+html: </details>

** FAQ, debugging steps

#+html: <details><summary>
*** nginx is not started
#+html: </summary>
**** verify nginx status on raspi

#+begin_src bash
$ ssh root@$RASPI_IP tail /var/log/nginx/error.log
2024/04/08 13:08:24 [emerg] 2320#2320: host not found in upstream "slim.tail6a160.ts.net" in /etc/nginx/http.d/default.conf:31
#+end_src

***** solution: tailscale is not started on gpu hosted machines

****** run Stability.app on GPU hosted machine terminal

****** "Launch" Stable diffusion webui
******* only need ~--api~ flag in configuration

****** restart nginx server
#+begin_src bash :noweb yes
<<init_var>>
ssh root@$RASPI_IP rc-service nginx restart
#+end_src

#+html: </details>

*** POST /gpu/sdapi/v1/txt2img [HTTP/1.1 502 Bad Gateway 55ms]

- gpu machine is not connected on tailnet.
- a1111 server is not started, could have crash and need to be started again

See: [[GPU laptop: A1111 webui.sh on tailscale network]]

#+begin_src bash
tailscale serve --http 80 7860
#+end_src
